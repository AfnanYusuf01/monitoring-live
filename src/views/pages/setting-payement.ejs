<% layout("layouts/main") %>

<div class="min-h-screen bg-gray-50">
  <!-- Success Notification -->
  

  <div class="flex flex-wrap -mx-3">
    <div class="flex-none w-full max-w-full px-3">
      <div class="relative flex flex-col min-w-0 mb-6 break-words bg-white border-0 rounded-2xl bg-clip-border">
        <div class="p-6 pb-0 mb-0 bg-white border-b-0 rounded-t-2xl">
          <!-- Header dengan judul dan tombol -->
          <div class="flex flex-wrap justify-between items-center">
            <h6>Payment Setting</h6>
            <div class="flex space-x-2">
              <button id="save-button" class="px-4 py-2 text-xs font-bold text-white uppercase transition-all bg-gradient-to-tl from-blue-600 to-blue-400 rounded-lg tracking-tight-soft shadow-soft-md hover:scale-102 active:opacity-85 hidden">
                Simpan Perubahan
              </button>
              <button id="add-payment" class="px-4 py-2 text-xs font-bold text-white uppercase transition-all bg-gradient-to-tl from-green-600 to-emerald-400 rounded-lg tracking-tight-soft shadow-soft-md hover:scale-102 active:opacity-85">
                Tambah Payment
              </button>
            </div>
          </div>

          <!-- Container untuk tabel -->
          <div class="flex flex-wrap px-6 mt-4">
            <div class="w-full">
              <div class="relative flex flex-col min-w-0 mb-6 break-words bg-white border-0 rounded-lg">
                <!-- Card header -->
                <div class="px-6 py-4 mb-0 bg-white border-b border-gray-200 rounded-t-lg">
                  <h6 class="text-lg font-semibold text-gray-800">Daftar Payment Method</h6>
                </div>

                <!-- Card body -->
                <div class="flex-auto px-0 pt-0 pb-2">
                  <div class="p-0 overflow-x-auto">
                    <table class="items-center w-full mb-0 align-top border-gray-200 text-slate-500">
                      <thead class="align-bottom">
                        <tr>
                          <th class="px-6 py-3 text-xs font-bold text-left uppercase align-middle bg-transparent border-b border-gray-200 tracking-none text-slate-400 opacity-70">No</th>
                          <th class="px-6 py-3 text-xs font-bold text-left uppercase align-middle bg-transparent border-b border-gray-200 tracking-none text-slate-400 opacity-70">Nama Layanan</th>
                          <th class="px-6 py-3 text-xs font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 tracking-none text-slate-400 opacity-70">Status</th>
                          <th class="px-6 py-3 text-xs font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 tracking-none text-slate-400 opacity-70">Aksi</th>
                        </tr>
                      </thead>

                      <tbody id="payments-table-body">
                        <!-- Data akan diisi melalui JavaScript -->
                        <tr>
                          <td colspan="4" class="text-center py-8">
                            <div class="flex flex-col items-center text-gray-500">
                              <svg class="w-12 h-12 mb-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                              </svg>
                              <span>Memuat data payment...</span>
                            </div>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div> <!-- End Card Body -->
              </div>
            </div>
          </div> <!-- End Table Container -->
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Modal Konfirmasi Hapus -->
<div id="confirm-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden bg-black bg-opacity-50 transition-opacity duration-300">
  <div class="bg-white rounded-lg shadow-xl w-full max-w-md mx-4 transform transition-transform duration-300 scale-95 opacity-0">
    <div class="px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-semibold text-gray-800">Konfirmasi Hapus</h3>
    </div>
    <div class="px-6 py-4">
      <p class="text-gray-700">Apakah Anda yakin ingin menghapus payment method ini?</p>
      <input type="hidden" id="delete-id">
    </div>
    <div class="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
      <button type="button" id="cancel-delete" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors">
        Batal
      </button>
      <button type="button" id="confirm-delete" class="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 transition-colors">
        Hapus
      </button>
    </div>
  </div>
</div>

<!-- Modal Tambah Payment -->
<div id="add-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden bg-black bg-opacity-50 transition-opacity duration-300">
  <div class="bg-white rounded-lg shadow-xl w-full max-w-md mx-4 transform transition-transform duration-300 scale-95 opacity-0">
    <div class="px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-semibold text-gray-800">Tambah Payment Method</h3>
    </div>
    <div class="px-6 py-4">
      <form id="add-payment-form">
        <div class="mb-4">
          <label for="nameService" class="block text-sm font-medium text-gray-700 mb-1">Nama Layanan</label>
          <input type="text" id="nameService" name="nameService" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        </div>
        <div class="mb-4">
          <label class="flex items-center">
            <input type="checkbox" id="status" name="status" class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            <span class="ml-2 text-sm text-gray-700">Aktifkan payment method ini</span>
          </label>
        </div>
      </form>
    </div>
    <div class="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
      <button type="button" id="cancel-add" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors">
        Batal
      </button>
      <button type="button" id="confirm-add" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors">
        Simpan
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // State untuk menyimpan data payment
    let payments = [];
    let hasChanges = false;
    
    // Elemen UI
    const paymentsTableBody = document.getElementById('payments-table-body');
    const saveButton = document.getElementById('save-button');
    
    // Load data payment saat halaman dimuat
    loadPayments();
    
    // Event listener untuk tombol tambah payment
    document.getElementById('add-payment').addEventListener('click', showAddModal);
    document.getElementById('cancel-add').addEventListener('click', hideAddModal);
    document.getElementById('confirm-add').addEventListener('click', addPayment);
    
    // Event listener untuk modal hapus
    document.getElementById('cancel-delete').addEventListener('click', hideConfirmModal);
    document.getElementById('confirm-delete').addEventListener('click', confirmDelete);
    
    // Event listener untuk tombol simpan
    saveButton.addEventListener('click', saveChanges);
    
    // Close modal ketika klik di luar
    document.getElementById('confirm-modal').addEventListener('click', function(e) {
      if (e.target.id === 'confirm-modal') hideConfirmModal();
    });
    
    document.getElementById('add-modal').addEventListener('click', function(e) {
      if (e.target.id === 'add-modal') hideAddModal();
    });
    
    // Fungsi untuk memuat data payment dari API
    async function loadPayments() {
      try {
        const response = await fetch('/api/payments');
        if (!response.ok) throw new Error('Gagal memuat data payment');
        
        payments = await response.json();
        renderPaymentsTable();
      } catch (error) {
        console.error('Error:', error);
        paymentsTableBody.innerHTML = `
          <tr>
            <td colspan="4" class="text-center py-8">
              <div class="flex flex-col items-center text-red-500">
                <svg class="w-12 h-12 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span>Gagal memuat data payment</span>
                <button onclick="loadPayments()" class="mt-3 px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700 transition-colors">
                  Coba Lagi
                </button>
              </div>
            </td>
          </tr>
        `;
      }
    }
    
    // Fungsi untuk merender tabel payment
    function renderPaymentsTable() {
      if (payments.length === 0) {
        paymentsTableBody.innerHTML = `
          <tr>
            <td colspan="4" class="text-center py-8">
              <div class="flex flex-col items-center text-gray-500">
                <svg class="w-12 h-12 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                </svg>
                <span>Belum ada data payment yang terdaftar</span>
              </div>
            </td>
          </tr>
        `;
        return;
      }
      
      paymentsTableBody.innerHTML = payments.map((payment, index) => `
        <tr class="hover:bg-gray-50 transition-colors">
          <td class="px-6 py-4 align-middle border-b border-gray-200">
            <span class="text-sm font-medium text-gray-900">${index + 1}</span>
          </td>
          <td class="px-6 py-4 align-middle border-b border-gray-200">
            <span class="text-sm font-medium text-gray-900">${payment.nameService}</span>
          </td>
          <td class="px-6 py-4 align-middle border-b border-gray-200 text-center">
            <label class="inline-flex items-center">
              <input type="radio" name="active-payment" value="${payment.id}" 
                ${payment.status ? 'checked' : ''} 
                class="form-radio h-4 w-4 text-blue-600 transition duration-150 ease-in-out"
                onchange="handleStatusChange(${payment.id})">
            </label>
          </td>
          <td class="px-6 py-4 align-middle border-b border-gray-200 text-center">
            <div class="flex justify-center space-x-2">
              <button class="delete-payment px-3 py-1 text-xs font-medium text-red-700 bg-red-100 rounded-md hover:bg-red-200 transition-colors" data-id="${payment.id}">
                Hapus
              </button>
            </div>
          </td>
        </tr>
      `).join('');
      
      // Setup event listeners untuk delete buttons
      document.querySelectorAll('.delete-payment').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const id = e.target.getAttribute('data-id');
          showConfirmModal(id);
        });
      });
    }
    
    // Fungsi untuk menangani perubahan status payment
    function handleStatusChange(paymentId) {
      // Reset semua status menjadi false
      payments = payments.map(payment => ({
        ...payment,
        status: payment.id === paymentId
      }));
      
      // Tampilkan tombol simpan
      hasChanges = true;
      saveButton.classList.remove('hidden');
    }
    
    // Fungsi untuk menyimpan perubahan
    async function saveChanges() {
      try {
        // Update semua payment
        const updatePromises = payments.map(payment => 
          fetch(`/api/payments/${payment.id}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              nameService: payment.nameService,
              status: payment.status
            })
          })
        );
        
        await Promise.all(updatePromises);
        
        // Sembunyikan tombol simpan
        hasChanges = false;
        saveButton.classList.add('hidden');
        
        // Tampilkan notifikasi sukses
        showNotification('Perubahan berhasil disimpan', 'success');
        
        // Reload data untuk memastikan UI sesuai dengan data terbaru
        loadPayments();
      } catch (error) {
        console.error('Error:', error);
        showNotification('Gagal menyimpan perubahan: ' + error.message, 'error');
      }
    }
    
    // Fungsi untuk menampilkan modal tambah payment
    function showAddModal() {
      const modal = document.getElementById('add-modal');
      const modalContent = modal.querySelector('div');
      
      modal.classList.remove('hidden');
      setTimeout(() => {
        modalContent.classList.remove('scale-95', 'opacity-0');
        modalContent.classList.add('scale-100', 'opacity-100');
      }, 10);
    }
    
    // Fungsi untuk menyembunyikan modal tambah payment
    function hideAddModal() {
      const modal = document.getElementById('add-modal');
      const modalContent = modal.querySelector('div');
      
      modalContent.classList.remove('scale-100', 'opacity-100');
      modalContent.classList.add('scale-95', 'opacity-0');
      
      setTimeout(() => {
        modal.classList.add('hidden');
        // Reset form
        document.getElementById('nameService').value = '';
        document.getElementById('status').checked = false;
      }, 300);
    }
    
    // Fungsi untuk menambah payment
    async function addPayment() {
      const nameService = document.getElementById('nameService').value.trim();
      const status = document.getElementById('status').checked;
      
      if (!nameService) {
        showNotification('Nama layanan harus diisi', 'error');
        return;
      }
      
      try {
        const response = await fetch('/api/payments', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            nameService,
            status
          })
        });
        
        if (!response.ok) throw new Error('Gagal menambah payment');
        
        hideAddModal();
        showNotification('Payment berhasil ditambahkan', 'success');
        
        // Reload data
        loadPayments();
      } catch (error) {
        console.error('Error:', error);
        showNotification('Gagal menambah payment: ' + error.message, 'error');
      }
    }
    
    // Tampilkan modal konfirmasi hapus
    function showConfirmModal(id) {
      document.getElementById('delete-id').value = id;
      
      const modal = document.getElementById('confirm-modal');
      const modalContent = modal.querySelector('div');
      
      modal.classList.remove('hidden');
      setTimeout(() => {
        modalContent.classList.remove('scale-95', 'opacity-0');
        modalContent.classList.add('scale-100', 'opacity-100');
      }, 10);
    }
    
    // Sembunyikan modal konfirmasi hapus
    function hideConfirmModal() {
      const modal = document.getElementById('confirm-modal');
      const modalContent = modal.querySelector('div');
      
      modalContent.classList.remove('scale-100', 'opacity-100');
      modalContent.classList.add('scale-95', 'opacity-0');
      
      setTimeout(() => {
        modal.classList.add('hidden');
      }, 300);
    }
    
    // Konfirmasi hapus
    async function confirmDelete() {
      const id = document.getElementById('delete-id').value;
      
      try {
        const response = await fetch(`/api/payments/${id}`, {
          method: 'DELETE',
        });
        
        if (!response.ok) throw new Error('Gagal menghapus payment');
        
        hideConfirmModal();
        showNotification('Payment berhasil dihapus', 'success');
        
        // Reload data
        loadPayments();
      } catch (error) {
        console.error('Error:', error);
        showNotification('Gagal menghapus payment: ' + error.message, 'error');
      }
    }
  });

  // Show notification
  function showNotification(message, type = 'info') {
    // Hapus notifikasi sebelumnya jika ada
    const existingNotification = document.getElementById('notification');
    if (existingNotification) {
      existingNotification.remove();
    }
    
    const colors = {
      success: 'bg-green-500',
      error: 'bg-red-500',
      warning: 'bg-yellow-500',
      info: 'bg-blue-500'
    };
    
    const icons = {
      success: '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>',
      error: '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>',
      warning: '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>',
      info: '<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>'
    };
    
    const notification = document.createElement('div');
    notification.id = 'notification';
    notification.className = `fixed top-4 right-4 flex items-center px-4 py-3 rounded-lg shadow-lg ${colors[type]} text-white z-50 transform transition-transform duration-300 translate-x-full`;
    notification.innerHTML = `${icons[type]}<span>${message}</span>`;
    
    document.body.appendChild(notification);
    
    // Animate in
    setTimeout(() => {
      notification.classList.remove('translate-x-full');
      notification.classList.add('translate-x-0');
    }, 10);
    
    // Auto remove after 5 seconds
    setTimeout(() => {
      if (notification.parentNode) {
        notification.classList.remove('translate-x-0');
        notification.classList.add('translate-x-full');
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }
    }, 5000);
  }
</script>