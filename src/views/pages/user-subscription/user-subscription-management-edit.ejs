<% layout("layouts/main") %>
<div class="min-h-screen bg-gray-50">
  <!-- Header dengan judul dan tombol kembali -->
  <div class="px-6 pt-6">
    <div class="flex flex-wrap justify-between items-center mb-6">
      <div class="flex items-center">
        <a href="/user-subscription-management" class="mr-3 text-gray-500 hover:text-gray-700">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
        </a>
        <h6 class="text-xl font-semibold text-gray-800">Edit User Subscription</h6>
      </div>
    </div>
  </div>

  <!-- Form container -->
  <div class="flex flex-wrap px-6">
    <div class="w-full">
      <div class="relative flex flex-col min-w-0 mb-6 break-words bg-white border-0 border-transparent border-solid rounded-lg">
        <!-- Card header -->
        <div class="px-6 py-4 mb-0 bg-white border-b border-gray-200 rounded-t-lg">
          <h6 class="text-lg font-semibold text-gray-800">Form Edit User Subscription</h6>
        </div>
        
        <!-- Card body -->
        <div class="flex-auto px-6 py-4">
          <form id="user-subscription-form" action="/api/user-subscriptions/<%= userSubscription.id %>" method="POST">
            <input type="hidden" name="_method" value="PUT">
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div>
                <label for="userId" class="block text-sm font-medium text-gray-700 mb-2">User *</label>
                <select id="userId" name="userId" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
                  <option value="">Pilih User</option>
                  <% if (users && users.length > 0) { %>
                    <% users.forEach(user => { %>
                      <option value="<%= user.id %>" <%= userSubscription.userId === user.id ? 'selected' : '' %>>
                        <%= user.name || 'Nama tidak tersedia' %> (<%= user.email || 'Email tidak tersedia' %>)
                      </option>
                    <% }) %>
                  <% } %>
                </select>
              </div>
              
              <div>
                <label for="subscriptionId" class="block text-sm font-medium text-gray-700 mb-2">Subscription *</label>
                <select id="subscriptionId" name="subscriptionId" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
                  <option value="">Pilih Subscription</option>
                  <% if (subscriptions && subscriptions.length > 0) { %>
                    <% subscriptions.forEach(subscription => { %>
                      <option value="<%= subscription.id %>" 
                              data-duration="<%= subscription.duration || 0 %>"
                              <%= userSubscription.subscriptionId === subscription.id ? 'selected' : '' %>>
                        <% if (subscription.name && subscription.price && subscription.duration) { %>
                          <%= subscription.name %> - Rp <%= subscription.price.toLocaleString('id-ID') %> (<%= subscription.duration %> hari)
                        <% } else { %>
                          Subscription #<%= subscription.id || 'Tidak diketahui' %>
                        <% } %>
                      </option>
                    <% }) %>
                  <% } %>
                </select>
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div>
                <label for="startDate" class="block text-sm font-medium text-gray-700 mb-2">Tanggal Mulai *</label>
                <input type="date" id="startDate" name="startDate" 
                       value="<%= userSubscription.startDate ? new Date(userSubscription.startDate).toISOString().split('T')[0] : '' %>" 
                       required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
              </div>
              
              <div>
                <label for="endDate" class="block text-sm font-medium text-gray-700 mb-2">Tanggal Berakhir *</label>
                <input type="date" id="endDate" name="endDate" 
                       value="<%= userSubscription.endDate ? new Date(userSubscription.endDate).toISOString().split('T')[0] : '' %>" 
                       required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
                <p class="text-xs text-gray-500 mt-1">Tanggal berakhir akan dihitung ulang jika subscription diubah</p>
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div>
                <label for="limitAkun" class="block text-sm font-medium text-gray-700 mb-2">Limit Akun</label>
                <input type="number" id="limitAkun" name="limitAkun" 
                       value="<%= userSubscription.limitAkun || '' %>" 
                       min="1" placeholder="Masukkan jumlah akun yang diizinkan" 
                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
                <p class="text-xs text-gray-500 mt-1">Kosongkan jika tidak ada batasan jumlah akun</p>
              </div>
              
              <div>
                <label for="status" class="block text-sm font-medium text-gray-700 mb-2">Status *</label>
                <select id="status" name="status" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors">
                  <option value="active" <%= userSubscription.status === 'active' ? 'selected' : '' %>>Aktif</option>
                  <option value="expired" <%= userSubscription.status === 'expired' ? 'selected' : '' %>>Kedaluwarsa</option>
                  <option value="canceled" <%= userSubscription.status === 'canceled' ? 'selected' : '' %>>Dibatalkan</option>
                  <option value="pending" <%= userSubscription.status === 'pending' ? 'selected' : '' %>>Menunggu</option>
                </select>
              </div>
            </div>
          </form>
        </div>
        
        <!-- Card footer -->
        <div class="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
          <a href="/user-subscription-management" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors">
            Batal
          </a>
          <button type="submit" form="user-subscription-form" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors">
            Simpan Perubahan
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('user-subscription-form');
    const subscriptionSelect = document.getElementById('subscriptionId');
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    const limitAkunInput = document.getElementById('limitAkun');
    
    // Hitung endDate ketika startDate atau subscription berubah
    function calculateEndDate() {
      const startDate = startDateInput.value;
      const selectedOption = subscriptionSelect.options[subscriptionSelect.selectedIndex];
      
      if (startDate && selectedOption && selectedOption.value) {
        const duration = parseInt(selectedOption.getAttribute('data-duration')) || 0;
        const start = new Date(startDate);
        
        // Hitung tanggal berakhir (startDate + duration hari)
        const end = new Date(start);
        end.setDate(start.getDate() + duration);
        
        // Format tanggal ke YYYY-MM-DD
        const formattedEndDate = end.toISOString().split('T')[0];
        endDateInput.value = formattedEndDate;
      }
    }
    
    // Event listeners
    startDateInput.addEventListener('change', calculateEndDate);
    subscriptionSelect.addEventListener('change', calculateEndDate);
    
    // Form submission
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(form);
      const data = {
        startDate: formData.get('startDate'),
        endDate: formData.get('endDate'),
        status: formData.get('status'),
        limitAkun: formData.get('limitAkun') ? parseInt(formData.get('limitAkun')) : null
      };
      
      // Validasi
      if (!data.startDate) {
        alert('Tanggal mulai harus diisi');
        return;
      }
      
      if (!data.endDate) {
        alert('Tanggal berakhir harus diisi');
        return;
      }
      
      if (!data.status) {
        alert('Status harus dipilih');
        return;
      }
      
      // Validasi limitAkun jika diisi
      if (data.limitAkun !== null && data.limitAkun < 1) {
        alert('Limit akun harus lebih dari 0 jika diisi');
        return;
      }
      
      // Validasi tanggal
      const startDate = new Date(data.startDate);
      const endDate = new Date(data.endDate);
      
      if (endDate <= startDate) {
        alert('Tanggal berakhir harus setelah tanggal mulai');
        return;
      }
      
      try {
        const response = await fetch(form.action, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });
        
        if (response.ok) {
          const result = await response.json();
          window.location.href = '/user-subscription-management?success=' + encodeURIComponent(result.message || 'User subscription berhasil diperbarui');
        } else {
          const errorData = await response.json();
          alert('Gagal memperbarui user subscription: ' + (errorData.error || 'Error tidak diketahui'));
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Gagal memperbarui user subscription: ' + error.message);
      }
    });
  });
</script>