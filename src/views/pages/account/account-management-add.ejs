<% layout("layouts/main") %>
  <div class="min-h-screen bg-gray-50">
    <!-- Header dengan judul dan tombol kembali -->
    <div class="px-6 pt-6">
      <div class="flex flex-wrap justify-between items-center mb-6">
        <div class="flex items-center">
          <a href="/account-management" class="mr-3 text-gray-500 hover:text-gray-700">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
          </a>
          <h6 class="text-xl font-semibold text-gray-800">Tambah Akun Shopee</h6>
        </div>
      </div>
    </div>

    <!-- Form container -->
    <div class="flex flex-wrap px-6">
      <div class="w-full">
        <div class="relative flex flex-col min-w-0 mb-6 break-words bg-white border-0 border-transparent border-solid rounded-lg">
          
          <!-- Section Import CSV -->
          <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
            <h6 class="text-lg font-semibold text-gray-800 mb-3">Import dari CSV</h6>
            <div class="flex items-center space-x-4">
              <label for="import-csv" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors cursor-pointer">
                Import CSV
              </label>
              <input type="file" id="import-csv" accept=".csv" class="hidden">
              
              <a href="/api/download-csv-template" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Template CSV
              </a>
            </div>
            <p class="text-xs text-gray-500 mt-2">Format CSV: cookie</p>
          </div>

          <!-- Divider -->
          <div class="relative flex py-2 items-center">
            <div class="flex-grow border-t border-gray-300"></div>
            <span class="flex-shrink mx-4 text-gray-400 text-sm">ATAU</span>
            <div class="flex-grow border-t border-gray-300"></div>
          </div>

          <!-- Card header -->
          <div class="px-6 py-4 mb-0 bg-white border-b border-gray-200">
            <h6 class="text-lg font-semibold text-gray-800">Tambah Manual</h6>
          </div>
          
          <!-- Card body -->
          <div class="flex-auto px-6 py-4">
            <form id="akun-form" action="/api/akun" method="POST">
              <div class="mb-4">
                <label for="cookie" class="block text-sm font-medium text-gray-700 mb-2">Cookie Shopee</label>
                <textarea id="cookie" name="cookie" rows="6" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors font-mono text-sm" placeholder="Masukkan cookie dari akun Shopee Affiliate (SPC_IU=...)"></textarea>
                <p class="text-xs text-gray-500 mt-1">Cookie dari akun Shopee Affiliate. Data nama akun, email, dan phone akan diambil otomatis dari API Shopee.</p>
              </div>
            </form>
          </div>
          
          <!-- Card footer -->
          <div class="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
            <a href="/account-management" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors">
              Batal
            </a>
            <button type="submit" form="akun-form" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors">
              Simpan
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal untuk menampilkan hasil import -->
  <div id="import-result-modal" class="fixed inset-0 z-50 flex items-center justify-center hidden bg-black bg-opacity-50 transition-opacity duration-300">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-md mx-4 transform transition-transform duration-300 scale-95 opacity-0">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-800">Hasil Import</h3>
      </div>
      <div class="px-6 py-4">
        <div id="import-success" class="text-green-600 mb-4 hidden">
          <svg class="w-6 h-6 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <span id="success-message"></span>
        </div>
        <div id="import-errors" class="hidden">
          <p class="text-red-600 font-medium mb-2">Beberapa data gagal diimport:</p>
          <ul id="error-list" class="text-sm text-red-500 max-h-40 overflow-y-auto"></ul>
        </div>
      </div>
      <div class="px-6 py-4 border-t border-gray-200 flex justify-end">
        <button type="button" id="close-import-modal" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors">
          Tutup
        </button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('akun-form');
      const importInput = document.getElementById('import-csv');
      const importResultModal = document.getElementById('import-result-modal');
      const importSuccess = document.getElementById('import-success');
      const importErrors = document.getElementById('import-errors');
      const successMessage = document.getElementById('success-message');
      const errorList = document.getElementById('error-list');
      const closeImportModal = document.getElementById('close-import-modal');
      
      // Handle form submit untuk tambah manual
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(form);
        const data = {
          cookie: formData.get('cookie')
        };
        
        try {
          const response = await fetch(form.action, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });
          
          const result = await response.json();
          
          if (response.ok) {
            window.location.href = '/account-management?success=Akun berhasil ditambahkan';
          } else {
            alert('Gagal menambahkan akun: ' + (result.error || 'Error tidak diketahui'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Gagal menambahkan akun: ' + error.message);
        }
      });
      
      // Handle import CSV
      importInput.addEventListener('change', async function(e) {
        const file = e.target.files[0];
        if (!file) return;
        
        // Validasi tipe file
        if (!file.name.endsWith('.csv') && file.type !== 'text/csv') {
          alert('Hanya file CSV yang diizinkan');
          e.target.value = '';
          return;
        }
        
        const formData = new FormData();
        formData.append('csvFile', file);
        
        try {
          const response = await fetch('/api/akun/import', {
            method: 'POST',
            body: formData,
          });
          
          const result = await response.json();
          
          if (response.ok) {
            // Tampilkan hasil sukses
            successMessage.textContent = result.message;
            importSuccess.classList.remove('hidden');
            
            // Jika ada error, tampilkan juga
            if (result.failedRows && result.failedRows.length > 0) {
              importErrors.classList.remove('hidden');
              errorList.innerHTML = '';
              result.failedRows.forEach(error => {
                const li = document.createElement('li');
                li.textContent = `Baris ${error.row}: ${error.reason}`;
                li.className = 'py-1 border-b border-gray-100 last:border-b-0';
                errorList.appendChild(li);
              });
            } else {
              importErrors.classList.add('hidden');
            }
            
            // Tampilkan modal
            showImportResultModal();
          } else {
            alert('Gagal mengimpor CSV: ' + result.error);
          }
        } catch (error) {
          console.error('Error importing CSV:', error);
          alert('Gagal mengimpor CSV: ' + error.message);
        } finally {
          // Reset input file
          e.target.value = '';
        }
      });
      
      // Fungsi untuk menampilkan modal hasil import
      function showImportResultModal() {
        const modalContent = importResultModal.querySelector('div');
        
        importResultModal.classList.remove('hidden');
        setTimeout(() => {
          modalContent.classList.remove('scale-95', 'opacity-0');
          modalContent.classList.add('scale-100', 'opacity-100');
        }, 10);
      }
      
      // Fungsi untuk menyembunyikan modal hasil import
      function hideImportResultModal() {
        const modalContent = importResultModal.querySelector('div');
        
        modalContent.classList.remove('scale-100', 'opacity-100');
        modalContent.classList.add('scale-95', 'opacity-0');
        
        setTimeout(() => {
          importResultModal.classList.add('hidden');
          // Redirect ke halaman utama jika import berhasil
          if (importSuccess.classList.contains('hidden') === false && 
              (!importErrors.classList.contains('hidden') || importErrors.classList.contains('hidden'))) {
            window.location.href = '/account-management?success=Import CSV berhasil';
          }
        }, 300);
      }
      
      // Event listener untuk tombol tutup modal
      closeImportModal.addEventListener('click', hideImportResultModal);
      
      // Close modal when clicking outside
      importResultModal.addEventListener('click', function(e) {
        if (e.target.id === 'import-result-modal') hideImportResultModal();
      });
    });
  </script>