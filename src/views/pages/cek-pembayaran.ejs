<% layout("layouts/main") %>
<div class="min-h-screen bg-gray-50">
    <!-- Payment Check Table -->
    <div class="flex flex-wrap -mx-3">
        <div class="flex-none w-full max-w-full px-3">
            <div class="relative flex flex-col min-w-0 mb-6 break-words bg-white border-0 border-transparent border-solid rounded-2xl bg-clip-border">
                <div class="p-6 pb-0 mb-0 bg-white border-b-0 border-b-solid rounded-t-2xl border-b-transparent">
                    <h6 class="mb-4">Cek Pembayaran Komisi</h6>
                    
                    <!-- Summary Section -->
                    <div id="summary-section" class="hidden mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                        <h3 class="text-lg font-semibold text-blue-800 mb-3">Ringkasan Pembayaran</h3>
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                            <div class="text-center p-3 bg-white rounded-lg shadow-sm">
                                <div class="text-2xl font-bold text-green-600" id="total-komisi">Rp 0</div>
                                <div class="text-sm text-gray-600">Total Komisi</div>
                            </div>
                            <div class="text-center p-3 bg-white rounded-lg shadow-sm">
                                <div class="text-2xl font-bold text-blue-600" id="count-sudah-dibayar">0</div>
                                <div class="text-sm text-gray-600">Sudah Dibayar</div>
                            </div>
                            <div class="text-center p-3 bg-white rounded-lg shadow-sm">
                                <div class="text-2xl font-bold text-yellow-600" id="count-menunggu">0</div>
                                <div class="text-sm text-gray-600">Menunggu Pembayaran</div>
                            </div>
                            <div class="text-center p-3 bg-white rounded-lg shadow-sm">
                                <div class="text-2xl font-bold text-gray-600" id="count-validasi">0</div>
                                <div class="text-sm text-gray-600">Sedang Divalidasi</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Filter Controls -->
                    <form id="filterForm" class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                            <select name="status" id="status-filter" class="w-full px-3 py-2 text-sm text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                                <option value="">Semua Status</option>
                                <option value="4">Sudah Dibayar</option>
                                <option value="10">Menunggu Pembayaran</option>
                                <option value="9">Sedang Divalidasi</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Tanggal Mulai</label>
                            <input type="date" name="tglMulai" id="start-date" required class="w-full px-3 py-2 text-sm text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Tanggal Selesai</label>
                            <input type="date" name="tglSelesai" id="end-date" required class="w-full px-3 py-2 text-sm text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        </div>
                        <div class="flex items-end gap-2">
                            <button type="submit" 
                                class="px-4 py-2 text-xs font-bold text-white uppercase transition-all bg-gradient-to-tl from-blue-600 to-cyan-400 rounded-lg ease-soft-in tracking-tight-soft shadow-soft-md bg-150 bg-x-25 hover:scale-102 active:opacity-85">
                                Cek Pembayaran
                            </button>
                            <button type="button" id="update-payments" 
                                class="px-4 py-2 text-xs font-bold text-white uppercase transition-all bg-gradient-to-tl from-purple-600 to-pink-400 rounded-lg ease-soft-in tracking-tight-soft shadow-soft-md bg-150 bg-x-25 hover:scale-102 active:opacity-85">
                                Update Data Pembayaran
                            </button>
                            <button type="button" onclick="resetFilters()" 
                                class="px-4 py-2 text-xs font-bold text-gray-800 uppercase transition-all bg-gray-200 rounded-lg ease-soft-in tracking-tight-soft shadow-soft-md bg-150 bg-x-25 hover:scale-102 active:opacity-85 hover:bg-gray-300">
                                Reset
                            </button>
                        </div>
                    </form>
                    
                    <!-- Success Notification -->
                    <div id="success-notification" class="hidden mb-4 p-4 bg-green-50 border border-green-200 rounded-lg">
                        <div class="flex items-start">
                            <div class="flex-shrink-0">
                                <svg class="w-5 h-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-green-800">Berhasil memuat data</h3>
                                <div id="success-message" class="mt-2 text-sm text-green-700">
                                    Data pembayaran berhasil dimuat.
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Error Display Section -->
                    <div id="error-container" class="hidden mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
                        <div class="flex items-start">
                            <div class="flex-shrink-0">
                                <svg class="w-5 h-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-red-800">Error pada beberapa akun</h3>
                                <div id="error-list" class="mt-2 text-sm text-red-700">
                                    <!-- Error messages will be inserted here -->
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Logout Notification -->
                    <div id="logout-notification" class="hidden mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                        <div class="flex items-start">
                            <div class="flex-shrink-0">
                                <svg class="w-5 h-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-yellow-800">Akun Logout</h3>
                                <div id="logout-list" class="mt-2 text-sm text-yellow-700">
                                    <!-- Logout messages will be inserted here -->
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Search and Export Controls -->
                    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-4 gap-3">
                        <div class="relative w-full md:w-64">
                            <input type="text" id="search-input" placeholder="Cari data..." 
                                class="w-full pl-10 pr-4 py-2 text-sm text-gray-700 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                            </div>
                        </div>
                        <button id="export-csv" class="flex items-center gap-2 px-4 py-2 text-xs font-bold text-gray-800 uppercase transition-all bg-green-200 rounded-lg ease-soft-in tracking-tight-soft shadow-soft-md bg-150 bg-x-25 hover:scale-102 active:opacity-85 hover:bg-green-300">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                            </svg>
                            Export CSV
                        </button>
                    </div>
                </div>
                
                <div class="flex-auto px-0 pt-0 pb-2">
                    <div class="p-0 overflow-x-auto">
                        <table class="items-center w-full mb-0 align-top border-gray-200 text-slate-500">
                            <thead class="align-bottom">
                                <tr>
                                    <th class="px-6 py-3 font-bold text-left uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">No</th>
                                    <th class="px-6 py-3 font-bold text-left uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Nama Akun</th>
                                    <th class="px-6 py-3 font-bold text-left uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">ID Validasi</th>
                                    <th class="px-6 py-3 font-bold text-right uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Jumlah Komisi</th>
                                    <th class="px-6 py-3 font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Status</th>
                                    <th class="px-6 py-3 font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Metode</th>
                                    <th class="px-6 py-3 font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Waktu Validasi</th>
                                    <th class="px-6 py-3 font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Waktu Selesai</th>
                                    <th class="px-6 py-3 font-bold text-center uppercase align-middle bg-transparent border-b border-gray-200 shadow-none text-xxs border-b-solid tracking-none whitespace-nowrap text-slate-400 opacity-70">Waktu Bayar</th>
                                </tr>
                            </thead>
                            <tbody id="payments-table-body">
                                <tr>
                                    <td colspan="9" class="text-center py-4">Silakan pilih tanggal dan klik "Cek Pembayaran"</td>
                                </tr>
                            </tbody>
                        </table>
                        
                        <!-- Pagination Controls -->
                        <div id="pagination-controls" class="hidden flex-col md:flex-row items-center justify-between px-4 py-3 border-t border-gray-200 sm:px-6">
                            <div class="flex-1 flex items-center justify-between">
                                <div>
                                    <p class="text-sm text-gray-700">
                                        Menampilkan
                                        <span id="pagination-start" class="font-medium">0</span>
                                        sampai
                                        <span id="pagination-end" class="font-medium">0</span>
                                        dari
                                        <span id="pagination-total" class="font-medium">0</span>
                                        hasil
                                    </p>
                                </div>
                                <div>
                                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                        <button id="prev-page" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                            <span class="sr-only">Previous</span>
                                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                        <div id="page-numbers" class="flex">
                                            <!-- Page numbers will be inserted here -->
                                        </div>
                                        <button id="next-page" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                            <span class="sr-only">Next</span>
                                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                            </svg>
                                        </button>
                                    </nav>
                                </div>
                            </div>
                            <div class="mt-2 text-sm text-gray-500">
                                Studio ID: <span id="current-studio-id" class="font-medium">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Global variables for pagination and search
let allPayments = [];
let filteredPayments = [];
let currentPage = 1;
const itemsPerPage = 10;

// Function to get studio ID from URL
function getStudioIdFromUrl() {
    const pathParts = window.location.pathname.split('/');
    const studioIndex = pathParts.indexOf('studio') + 1;
    if (studioIndex > 0 && studioIndex < pathParts.length) {
        return pathParts[studioIndex];
    }
    return null;
}

// Set global studio ID when page loads
document.addEventListener('DOMContentLoaded', function() {
    window.currentStudioId = getStudioIdFromUrl();
    console.log('Current Studio ID:', window.currentStudioId);
    
    // Display studio ID in the UI
    if (window.currentStudioId) {
        document.getElementById('current-studio-id').textContent = window.currentStudioId;
    }
    
    // Set default dates (today and 7 days ago)
    const today = new Date().toISOString().split('T')[0];
    const sevenDaysAgo = new Date();
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
    const sevenDaysAgoFormatted = sevenDaysAgo.toISOString().split('T')[0];
    
    document.getElementById('start-date').value = sevenDaysAgoFormatted;
    document.getElementById('end-date').value = today;
    
    // Handle form submission
    document.getElementById('filterForm').addEventListener('submit', function(e) {
        e.preventDefault();
        checkPayments();
    });
    
    // Setup search functionality
    document.getElementById('search-input').addEventListener('input', function() {
        filterPayments();
    });
    
    // Setup pagination controls
    document.getElementById('prev-page').addEventListener('click', function() {
        if (currentPage > 1) {
            currentPage--;
            renderPayments();
        }
    });
    
    document.getElementById('next-page').addEventListener('click', function() {
        const totalPages = Math.ceil(filteredPayments.length / itemsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            renderPayments();
        }
    });
    
    // Setup export CSV functionality
    document.getElementById('export-csv').addEventListener('click', exportToCSV);
    
    // Setup update payments functionality
    document.getElementById('update-payments').addEventListener('click', function() {
        updatePayments();
    });
});

// Function to update payments data
async function updatePayments() {
    const formData = new FormData(document.getElementById('filterForm'));
    const params = {
        tglMulai: formData.get('tglMulai'),
        tglSelesai: formData.get('tglSelesai'),
        status: formData.get('status') || undefined
    };

    try {
        // Show loading state
        showNotification('loading', 'Memperbarui data pembayaran...');
        
        // Hide all notification containers initially
        document.getElementById('error-container').classList.add('hidden');
        document.getElementById('logout-notification').classList.add('hidden');
        document.getElementById('success-notification').classList.add('hidden');
        document.getElementById('summary-section').classList.add('hidden');

        // PERUBAHAN: Menggunakan endpoint yang baru
        const response = await fetch(`/api/post-cek-pembayaran`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(params)
        });
        
        if (!response.ok) {
            throw new Error(await response.text());
        }
        
        const result = await response.json();
        
        // Handle API response
        if (result.success) {
            showNotification('success', 'Data pembayaran berhasil diperbarui.');
            
            // If update was successful, refresh the data
            setTimeout(() => {
                checkPayments();
            }, 1500);
        } else {
            showNotification('error', 'Gagal memperbarui data pembayaran.');
            
            // Check if there are errors in the response
            if (result.errors && result.errors.length > 0) {
                // Separate cookie incorrect errors from other errors
                const cookieErrors = result.errors.filter(error => 
                    error.error && error.error.code === 30002 && error.error.msg === "cookie incorrect"
                );
                
                const otherErrors = result.errors.filter(error => 
                    !error.error || error.error.code !== 30002 || error.error.msg !== "cookie incorrect"
                );
                
                // Show cookie incorrect errors in logout notification
                if (cookieErrors.length > 0) {
                    showLogoutNotifications(cookieErrors);
                }
                
                // Show other errors in error container
                if (otherErrors.length > 0) {
                    showErrors(otherErrors);
                }
            }
        }
    } catch (error) {
        console.error('Error:', error);
        showNotification('error', `Gagal memperbarui data: ${error.message || 'Terjadi kesalahan'}`);
    }
}

// Helper function to show notifications
function showNotification(type, message) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg ${
        type === 'success' ? 'bg-green-50 border border-green-200 text-green-800' :
        type === 'error' ? 'bg-red-50 border border-red-200 text-red-800' :
        'bg-blue-50 border border-blue-200 text-blue-800'
    }`;
    
    notification.innerHTML = `
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 ${type === 'success' ? 'text-green-500' : type === 'error' ? 'text-red-500' : 'text-blue-500'}" 
                 fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="${type === 'success' ? 'M5 13l4 4L19 7' : 
                         type === 'error' ? 'M6 18L18 6M6 6l12 12' :
                         'M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'}"></path>
            </svg>
            <span>${message}</span>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // Remove notification after 3 seconds
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// Check payments with filters
async function checkPayments() {
    const formData = new FormData(document.getElementById('filterForm'));
    const params = {
        tglMulai: formData.get('tglMulai'),
        tglSelesai: formData.get('tglSelesai'),
        status: formData.get('status') || undefined
    };

    try {
        // Show loading state
        document.getElementById('payments-table-body').innerHTML = `
            <tr>
                <td colspan="9" class="text-center py-4">
                    <div class="flex justify-center items-center">
                        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Memuat data...
                    </div>
                </td>
            </tr>
        `;

        // Hide all notification containers initially
        document.getElementById('error-container').classList.add('hidden');
        document.getElementById('logout-notification').classList.add('hidden');
        document.getElementById('success-notification').classList.add('hidden');
        document.getElementById('summary-section').classList.add('hidden');

        // Call API with studio ID
        const response = await fetch(`/api/cek-pembayaran/${window.currentStudioId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(params)
        });
        
        if (!response.ok) {
            throw new Error(await response.text());
        }
        
        const result = await response.json();
        
        // Handle API response based on success flag
        if (result.success === false) {
            // Show error notification
            document.getElementById('success-notification').classList.add('hidden');
            
            // Check if there are errors in the response
            if (result.errors && result.errors.length > 0) {
                // Separate cookie incorrect errors from other errors
                const cookieErrors = result.errors.filter(error => 
                    error.error && error.error.code === 30002 && error.error.msg === "cookie incorrect"
                );
                
                const otherErrors = result.errors.filter(error => 
                    !error.error || error.error.code !== 30002 || error.error.msg !== "cookie incorrect"
                );
                
                // Show cookie incorrect errors in logout notification
                if (cookieErrors.length > 0) {
                    showLogoutNotifications(cookieErrors);
                }
                
                // Show other errors in error container
                if (otherErrors.length > 0) {
                    showErrors(otherErrors);
                }
            }
        } else {
            // Show success notification
            document.getElementById('success-notification').classList.remove('hidden');
            document.getElementById('error-container').classList.add('hidden');
            document.getElementById('logout-notification').classList.add('hidden');
            
            // Show summary if available
            if (result.summary) {
                showSummary(result.summary);
            }
        }
        
        // Set data regardless of errors
        allPayments = result.data || [];
        currentPage = 1;
        filterPayments();
    } catch (error) {
        console.error('Error:', error);
        document.getElementById('payments-table-body').innerHTML = `
            <tr>
                <td colspan="9" class="text-center py-4 text-red-500">
                    Gagal memuat data: ${error.message || 'Terjadi kesalahan'}
                </td>
            </tr>
        `;
        hidePagination();
        
        // Hide notifications
        document.getElementById('success-notification').classList.add('hidden');
        document.getElementById('error-container').classList.add('hidden');
        document.getElementById('logout-notification').classList.add('hidden');
        document.getElementById('summary-section').classList.add('hidden');
    }
}

// Function to show summary
function showSummary(summary) {
    const summarySection = document.getElementById('summary-section');
    document.getElementById('total-komisi').textContent = formatRupiah(summary.totalKomisi);
    document.getElementById('count-sudah-dibayar').textContent = summary.statusCount['Sudah Dibayar'];
    document.getElementById('count-menunggu').textContent = summary.statusCount['Menunggu Pembayaran'];
    document.getElementById('count-validasi').textContent = summary.statusCount['Sedang Divalidasi'];
    summarySection.classList.remove('hidden');
}

// Helper function to format currency
function formatRupiah(amount) {
    if (!amount) return 'Rp 0';
    return new Intl.NumberFormat('id-ID', {
        style: 'currency',
        currency: 'IDR',
        minimumFractionDigits: 0
    }).format(amount);
}

// Show errors from API response
function showErrors(errors) {
    const errorContainer = document.getElementById('error-container');
    const errorList = document.getElementById('error-list');
    
    // Clear previous errors
    errorList.innerHTML = '';
    
    // Add each error to the list
    errors.forEach(error => {
        const errorItem = document.createElement('div');
        errorItem.className = 'mb-1';
        
        let errorMessage = `<strong>${error.nama_akun}:</strong> `;
        
        if (error.error && error.error.msg) {
            errorMessage += error.error.msg;
            if (error.error.code) {
                errorMessage += ` (Kode: ${error.error.code})`;
            }
        } else if (error.error && typeof error.error === 'string') {
            errorMessage += error.error;
        } else if (error.error) {
            errorMessage += JSON.stringify(error.error);
        } else {
            errorMessage += 'Terjadi kesalahan yang tidak diketahui';
        }
        
        errorItem.innerHTML = errorMessage;
        errorList.appendChild(errorItem);
    });
    
    // Show the error container
    errorContainer.classList.remove('hidden');
}

// Show logout notifications for cookie incorrect errors
function showLogoutNotifications(logoutErrors) {
    const logoutContainer = document.getElementById('logout-notification');
    const logoutList = document.getElementById('logout-list');
    
    // Clear previous logout notifications
    logoutList.innerHTML = '';
    
    // Add each logout notification to the list
    logoutErrors.forEach(error => {
        const logoutItem = document.createElement('div');
        logoutItem.className = 'mb-1';
        logoutItem.innerHTML = `<strong>${error.nama_akun}</strong> - Akun logout, perlu login ulang`;
        logoutList.appendChild(logoutItem);
    });
    
    // Show the logout notification container
    logoutContainer.classList.remove('hidden');
}

// Filter payments based on search input
function filterPayments() {
    const searchTerm = document.getElementById('search-input').value.toLowerCase();
    
    if (!searchTerm) {
        filteredPayments = [...allPayments];
    } else {
        filteredPayments = allPayments.filter(payment => 
            (payment.nama_akun && payment.nama_akun.toLowerCase().includes(searchTerm)) ||
            (payment.validation_id && payment.validation_id.toLowerCase().includes(searchTerm)) ||
            (payment.total_payment_amount_dis && payment.total_payment_amount_dis.toLowerCase().includes(searchTerm)) ||
            (payment.payment_status && payment.payment_status.toLowerCase().includes(searchTerm)) ||
            (payment.payment_channel && payment.payment_channel.toLowerCase().includes(searchTerm))
        );
    }
    
    currentPage = 1;
    renderPayments();
}

// Render payments to table with pagination
function renderPayments() {
    const tbody = document.getElementById('payments-table-body');
    
    if (!filteredPayments || filteredPayments.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="9" class="text-center py-4">Tidak ada data pembayaran untuk kriteria yang dipilih</td>
            </tr>
        `;
        hidePagination();
        return;
    }
    
    // Calculate pagination values
    const totalItems = filteredPayments.length;
    const totalPages = Math.ceil(totalItems / itemsPerPage);
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = Math.min(startIndex + itemsPerPage, totalItems);
    const currentItems = filteredPayments.slice(startIndex, endIndex);
    
    // Update pagination info
    document.getElementById('pagination-start').textContent = startIndex + 1;
    document.getElementById('pagination-end').textContent = endIndex;
    document.getElementById('pagination-total').textContent = totalItems;
    
    // Render page numbers
    renderPageNumbers(totalPages);
    
    // Show table data
    tbody.innerHTML = currentItems.map((payment, index) => `
        <tr class="${index % 2 === 0 ? 'bg-gray-50' : 'bg-white'} hover:bg-gray-100">
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap">
                <span class="text-sm">${startIndex + index + 1}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap">
                <span class="text-sm font-medium">${payment.nama_akun || '-'}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap">
                <span class="text-sm font-mono">${payment.validation_id || '-'}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-right">
                <span class="text-sm font-medium">${payment.total_payment_amount_dis || '0'}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-center">
                <span class="text-sm ${getStatusColorClass(payment.payment_status)} px-2 py-1 rounded-full">
                    ${payment.payment_status || 'Tidak Diketahui'}
                </span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-center">
                <span class="text-sm">${payment.payment_channel || '-'}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-center">
                <span class="text-sm">${formatDateTime(payment.validation_review_time)}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-center">
                <span class="text-sm">${formatDateTime(payment.order_completed_period_end_time)}</span>
            </td>
            <td class="px-6 py-3 align-middle border-b whitespace-nowrap text-center">
                <span class="text-sm">${formatDateTime(payment.payment_time)}</span>
            </td>
        </tr>
    `).join('');
    
    // Show pagination controls
    showPagination();
    
    // Update pagination button states
    document.getElementById('prev-page').disabled = currentPage === 1;
    document.getElementById('next-page').disabled = currentPage === totalPages;
}

// Render page numbers for pagination
function renderPageNumbers(totalPages) {
    const pageNumbersContainer = document.getElementById('page-numbers');
    pageNumbersContainer.innerHTML = '';
    
    if (totalPages <= 1) return;
    
    // Always show first page
    appendPageNumber(1);
    
    // Calculate range of pages to show
    let startPage = Math.max(2, currentPage - 1);
    let endPage = Math.min(totalPages - 1, currentPage + 1);
    
    // Add ellipsis if needed
    if (startPage > 2) {
        pageNumbersContainer.innerHTML += '<span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">...</span>';
    }
    
    // Add middle pages
    for (let i = startPage; i <= endPage; i++) {
        appendPageNumber(i);
    }
    
    // Add ellipsis if needed
    if (endPage < totalPages - 1) {
        pageNumbersContainer.innerHTML += '<span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">...</span>';
    }
    
    // Always show last page if there is more than one page
    if (totalPages > 1) {
        appendPageNumber(totalPages);
    }
    
    function appendPageNumber(page) {
        const isActive = page === currentPage;
        const pageButton = document.createElement('button');
        pageButton.className = `relative inline-flex items-center px-4 py-2 border text-sm font-medium ${isActive ? 
            'z-10 bg-blue-50 border-blue-500 text-blue-600' : 
            'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'}`;
        pageButton.textContent = page;
        
        pageButton.addEventListener('click', () => {
            currentPage = page;
            renderPayments();
        });
        
        pageNumbersContainer.appendChild(pageButton);
    }
}

// Show pagination controls
function showPagination() {
    document.getElementById('pagination-controls').classList.remove('hidden');
}

// Hide pagination controls
function hidePagination() {
    document.getElementById('pagination-controls').classList.add('hidden');
}

// Export to CSV function
function exportToCSV() {
    if (!filteredPayments || filteredPayments.length === 0) {
        alert('Tidak ada data untuk diexport');
        return;
    }
    
    // Define CSV headers
    const headers = ['No', 'Nama Akun', 'ID Validasi', 'Jumlah Komisi', 'Status', 'Metode', 'Waktu Validasi', 'Waktu Selesai', 'Waktu Bayar'];
    
    // Convert data to CSV format
    let csvContent = headers.join(',') + '\n';
    
    filteredPayments.forEach((payment, index) => {
        const row = [
            index + 1,
            `"${payment.nama_akun || ''}"`,
            payment.validation_id || '',
            payment.total_payment_amount_dis || '0',
            payment.payment_status || 'Tidak Diketahui',
            payment.payment_channel || '',
            formatDateTime(payment.validation_review_time),
            formatDateTime(payment.order_completed_period_end_time),
            formatDateTime(payment.payment_time)
        ];
        csvContent += row.join(',') + '\n';
    });
    
    // Create download link
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.setAttribute('href', url);
    link.setAttribute('download', `pembayaran-komisi-${new Date().toISOString().split('T')[0]}.csv`);
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}

// Helper functions
function getStatusColorClass(status) {
    if (!status) return 'bg-gray-100 text-gray-800';
    
    switch(status) {
        case 'Sudah Dibayar':
            return 'bg-green-100 text-green-800';
        case 'Menunggu Pembayaran':
            return 'bg-yellow-100 text-yellow-800';
        case 'Sedang Divalidasi':
            return 'bg-blue-100 text-blue-800';
        default:
            return 'bg-gray-100 text-gray-800';
    }
}

function formatDateTime(dateString) {
    if (!dateString || dateString === "1970-01-01T00:00:00.000Z") return '-';
    
    try {
        const date = new Date(dateString);
        return date.toLocaleString('id-ID', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        }).replace(/\./g, ':');
    } catch (e) {
        return '-';
    }
}

// Reset filters
function resetFilters() {
    document.getElementById('filterForm').reset();
    document.getElementById('search-input').value = '';
    
    // Reset to default dates
    const today = new Date().toISOString().split('T')[0];
    const sevenDaysAgo = new Date();
    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
    const sevenDaysAgoFormatted = sevenDaysAgo.toISOString().split('T')[0];
    
    document.getElementById('start-date').value = sevenDaysAgoFormatted;
    document.getElementById('end-date').value = today;
    
    // Clear table
    document.getElementById('payments-table-body').innerHTML = `
        <tr>
            <td colspan="9" class="text-center py-4">Silakan pilih tanggal dan klik "Cek Pembayaran"</td>
        </tr>
    `;
    
    // Reset data and hide pagination
    allPayments = [];
    filteredPayments = [];
    hidePagination();
    
    // Hide all notifications
    document.getElementById('error-container').classList.add('hidden');
    document.getElementById('logout-notification').classList.add('hidden');
    document.getElementById('success-notification').classList.add('hidden');
    document.getElementById('summary-section').classList.add('hidden');
}
</script>